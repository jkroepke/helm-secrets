---
name: CI

env:
  SOPS_VERSION: 3.6.0
  VAULT_VERSION: 1.5.2
  # https://deb.debian.org/debian/pool/main/d/devscripts/
  DEVSCRIPTS_VERSION: 2.20.4

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v2
      - name: Run the sh-checker
        uses: luizm/action-sh-checker@v0.1.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          sh_checker_comment: true
          sh_checker_exclude: "tests"

      # https://github.com/luizm/action-sh-checker/issues/5
      - name: Install checkbashisms
        run: |-
          sudo apt-get update -qq
          sudo apt-get install -y -qq curl
          curl -sSLf https://deb.debian.org/debian/pool/main/d/devscripts/devscripts_${DEVSCRIPTS_VERSION}_amd64.deb -o /tmp/devscripts.deb
          set +e
          sudo dpkg -i /tmp/devscripts.deb
          set -e
          sudo apt-get install -y -qq -f

      - name: Run checkbashisms
        run: checkbashisms -p scripts/*

  unit-tests:
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest] # [dash, zsh]
        container: [~]
        include:
          - os: ubuntu-latest
            container: alpine   # ash
          - os: ubuntu-latest
            container: centos:8 # bash
    steps:
      - name: Install git & curl
        run: |-
          if command -v apk > /dev/null; then
            apk add --no-cache bash git curl gnupg
          elif command -v yum > /dev/null; then
            yum install -y git-core unzip
          fi

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.2.4

      - name: Install dependencies
        run: |-
          mkdir -p "$GITHUB_WORKSPACE/bin"
          echo "::add-path::$GITHUB_WORKSPACE/bin/"

          curl -sSfL "https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_$(uname | awk '{print tolower($0)}')_amd64.zip" -o vault.zip
          unzip -qq vault.zip -d "$GITHUB_WORKSPACE/bin/"
          rm vault.zip
          chmod +x "$GITHUB_WORKSPACE/bin/vault"

          curl -sSfL "https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.$(uname | awk '{print tolower($0)}')" -z "$GITHUB_WORKSPACE/bin/sops" -o "$GITHUB_WORKSPACE/bin/sops"
          chmod +x "$GITHUB_WORKSPACE/bin/sops"

      - name: Print Environment
        run: |-
          tests/bats/core/install.sh "$GITHUB_WORKSPACE"

          echo "Shell: $(readlink /bin/sh || readlink /var/select/sh)"
          bats -v
          sops --version
          gpg --version
          vault --version

      - name: helm plugin install
        run: helm plugin install .

      - name: HELM_SECRETS_DRIVER=sops bats --tap -r tests/unit
        run: |
          bats --tap -r tests/unit
        env:
          HELM_SECRETS_DRIVER: sops

      - name: HELM_SECRETS_DRIVER=vault bats --tap -r tests/unit
        run: |
          vault server -dev -dev-root-token-id=test &>/dev/null &
          bats --tap -r tests/unit
        env:
          HELM_SECRETS_DRIVER: vault
          VAULT_ADDR: 'http://127.0.0.1:8200'

  integration-tests:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: engineerd/setup-kind@v0.4.0
        with:
          image: kindest/node:v1.18.6

      - run: kubectl cluster-info

      - uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/bin
          key: sops-${{ env.SOPS_VERSION }}

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.3.0

      - name: Install dependencies
        run: |-
          mkdir -p "$GITHUB_WORKSPACE/bin"
          curl -sSfL "https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.$(uname | awk '{print tolower($0)}')" -z "$GITHUB_WORKSPACE/bin/sops" -o "$GITHUB_WORKSPACE/bin/sops"
          export PATH="$GITHUB_WORKSPACE/bin/:$PATH"
          echo "::add-path::$GITHUB_WORKSPACE/bin/"
          chmod +x "$GITHUB_WORKSPACE/bin/sops"
          sops --version

          tests/bats/core/install.sh "$GITHUB_WORKSPACE"
          bats -v

      - name: helm plugin install
        run: helm plugin install .

      - run: bats --tap -r tests/it
