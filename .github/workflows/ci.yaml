---
name: CI

env:
  SOPS_VERSION: 3.6.1

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v2
      - name: Run the sh-checker
        uses: luizm/action-sh-checker@v0.1.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHELLCHECK_OPTS: -x
        with:
          sh_checker_comment: true
          sh_checker_exclude: "tests"
          sh_checker_checkbashisms_enable: true

  unit-tests:
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest] # [dash, zsh, bash]
        container: [~]
        include:
          - os: ubuntu-latest
            container: alpine   # ash
          - os: ubuntu-latest
            container: centos:7 # bash
          - os: ubuntu-latest
            container: centos:8 # bash
    steps:
      - name: Install git & curl
        if: "!contains(matrix.os, 'windows-latest')"
        run: |-
          if command -v apk > /dev/null; then
            apk add --no-cache bash git curl gnupg
          elif command -v yum > /dev/null; then
            if [ "$(rpm -E %{rhel})" == "7" ]; then
              yum-config-manager --add-repo='https://download.copr.fedorainfracloud.org/results/jkroepke/git/epel-$releasever-x86_64/'
              rpm --import https://download.copr.fedorainfracloud.org/results/jkroepke/git/pubkey.gpg
            fi

            yum install -y git-core unzip
          fi

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Helm
        uses: azure/setup-helm@v1

      - name: Setup Sops
        uses: mdgreenwald/mozilla-sops-action@v1

      - name: Setup Vault
        uses: innovationnorway/setup-vault@v1

      - name: Install bat
        if: "!contains(matrix.os, 'windows-latest')"
        run: |-
          mkdir -p "$GITHUB_WORKSPACE/bin"
          echo "$GITHUB_WORKSPACE/bin/" >> $GITHUB_PATH

          tests/bats/core/install.sh "$GITHUB_WORKSPACE"

      - name: Print Environment (*nix)
        if: "!contains(matrix.os, 'windows-latest')"
        run: |-
          echo "Shell: $(readlink /bin/sh || readlink /var/select/sh)"
          bats -v
          sops --version
          gpg --version
          vault --version

      - name: Print Environment (windows)
        if: "contains(matrix.os, 'windows-latest')"
        run: |-
          bash tests/bats/core/bin/bats -v
          sops --version
          gpg --version

      - name: helm plugin install
        run: helm plugin install .

      - name: HELM_SECRETS_DRIVER=sops bats --tap -r tests/unit
        if: "!contains(matrix.os, 'windows-latest')"
        run: |
          bats --tap -r tests/unit
        env:
          HELM_SECRETS_DRIVER: sops

      - name: HELM_SECRETS_DRIVER=vault bats --tap -r tests/unit
        if: "!contains(matrix.os, 'windows-latest')"
        run: |
          vault server -dev -dev-root-token-id=test &>/dev/null &
          bats --tap -r tests/unit
        env:
          HELM_SECRETS_DRIVER: vault
          VAULT_ADDR: 'http://127.0.0.1:8200'

      - name: HELM_SECRETS_DRIVER=sops bats --tap -r tests/unit (on windows)
        if: "contains(matrix.os, 'windows-latest')"
        run: |
          $env:W_TEMP=$env:TEMP; bash tests/bats/core/bin/bats --tap -r tests/unit
        env:
          HELM_SECRETS_DRIVER: sops

  integration-tests:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.9.0"

      - run: kubectl cluster-info

      - uses: actions/cache@v2.1.3
        with:
          path: ${{ github.workspace }}/bin
          key: sops-${{ env.SOPS_VERSION }}-${{ env.VAULT_VERSION }}

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Helm
        uses: azure/setup-helm@v1

      - name: Setup Sops
        uses: mdgreenwald/mozilla-sops-action@v1

      - name: Setup Vault
        uses: innovationnorway/setup-vault@v1

      - name: Install dependencies
        run: |-
          mkdir -p "$GITHUB_WORKSPACE/bin"
          echo "$GITHUB_WORKSPACE/bin/" >> $GITHUB_PATH

          tests/bats/core/install.sh "$GITHUB_WORKSPACE"
      - name: Print Environment
        run: |-
          echo "Shell: $(readlink /bin/sh || readlink /var/select/sh)"
          bats -v
          sops --version
          gpg --version
          vault --version

      - name: helm plugin install
        run: helm plugin install .

      - run: bats --tap -r tests/it
  plugin-install:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v2

      - name: Setup Helm
        uses: azure/setup-helm@v1

      - name: helm plugin install
        run: sudo helm plugin install .
        env:
          SOPS_VERSION: ""

      - name: Tests if sops installed
        run: sops --version
